// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectBuildCraft.Data;

#nullable disable

namespace ProjectBuildCraft.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508155020_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("ProjectBuildCraft.Models.BuildMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FocusOptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mods")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PrimaryStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SecondaryStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubclassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WeaponId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("ClassId");

                    b.HasIndex("FocusOptionId");

                    b.HasIndex("PrimaryStatId");

                    b.HasIndex("SecondaryStatId");

                    b.HasIndex("SubclassId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Mappings");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            ArmorId = 1,
                            ClassId = 1,
                            FocusOptionId = 3,
                            Mods = "Aspects: Touch of Flame; Fragments: Cure, Mercy, Flame, Searing; Helmet: Ashes to Assets ×2, Siphon Mod; Gloves: Firepower ×2, Momentum Transfer; Chest: Concussive Dampener, Emergency Reinforcement; Legs: Absolution, Restoration, Invigoration; Class Item: Powerful Attraction, Outreach, Distribution",
                            PrimaryStatId = 3,
                            SecondaryStatId = 6,
                            SubclassId = 1,
                            Summary = "Dawnblade build centered on Ability Uptime with Touch of Flame + high-regen fragments and Dragon's Breath.",
                            WeaponId = 1
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.DestinyClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Warlock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hunter"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Titan"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.ExoticArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinyClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Armors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DestinyClassId = 1,
                            Name = "Sunbracers"
                        },
                        new
                        {
                            Id = 2,
                            DestinyClassId = 1,
                            Name = "Transversive Steps"
                        },
                        new
                        {
                            Id = 3,
                            DestinyClassId = 2,
                            Name = "Celestial Nighthawk"
                        },
                        new
                        {
                            Id = 4,
                            DestinyClassId = 2,
                            Name = "Raiden Flux"
                        },
                        new
                        {
                            Id = 5,
                            DestinyClassId = 3,
                            Name = "Heart of Inmost Light"
                        },
                        new
                        {
                            Id = 6,
                            DestinyClassId = 3,
                            Name = "Dunemarchers"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.ExoticWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dragon's Breath"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ace of Spades"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thorn"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.FocusOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FocusOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Weapon Damage"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weapon Uptime"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ability Uptime"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.StatSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mobility"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Resilience"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Recovery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Discipline"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Intellect"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Strength"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.Subclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinyClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subclasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DestinyClassId = 1,
                            Name = "Dawnblade"
                        },
                        new
                        {
                            Id = 2,
                            DestinyClassId = 1,
                            Name = "Voidwalker"
                        },
                        new
                        {
                            Id = 3,
                            DestinyClassId = 1,
                            Name = "Stormcaller"
                        },
                        new
                        {
                            Id = 4,
                            DestinyClassId = 1,
                            Name = "Shadebinder"
                        },
                        new
                        {
                            Id = 5,
                            DestinyClassId = 1,
                            Name = "Broodweaver"
                        },
                        new
                        {
                            Id = 6,
                            DestinyClassId = 1,
                            Name = "Prismatic"
                        },
                        new
                        {
                            Id = 7,
                            DestinyClassId = 2,
                            Name = "Gunslinger"
                        },
                        new
                        {
                            Id = 8,
                            DestinyClassId = 2,
                            Name = "Nightstalker"
                        },
                        new
                        {
                            Id = 9,
                            DestinyClassId = 2,
                            Name = "Arcstrider"
                        },
                        new
                        {
                            Id = 10,
                            DestinyClassId = 2,
                            Name = "Revenant"
                        },
                        new
                        {
                            Id = 11,
                            DestinyClassId = 2,
                            Name = "Threadrunner"
                        },
                        new
                        {
                            Id = 12,
                            DestinyClassId = 2,
                            Name = "Prismatic"
                        },
                        new
                        {
                            Id = 13,
                            DestinyClassId = 3,
                            Name = "Sentinel"
                        },
                        new
                        {
                            Id = 14,
                            DestinyClassId = 3,
                            Name = "Sunbreaker"
                        },
                        new
                        {
                            Id = 15,
                            DestinyClassId = 3,
                            Name = "Striker"
                        },
                        new
                        {
                            Id = 16,
                            DestinyClassId = 3,
                            Name = "Behemoth"
                        },
                        new
                        {
                            Id = 17,
                            DestinyClassId = 3,
                            Name = "Berserker"
                        },
                        new
                        {
                            Id = 18,
                            DestinyClassId = 3,
                            Name = "Prismatic"
                        });
                });

            modelBuilder.Entity("ProjectBuildCraft.Models.BuildMapping", b =>
                {
                    b.HasOne("ProjectBuildCraft.Models.ExoticArmor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.DestinyClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.FocusOption", "FocusOption")
                        .WithMany()
                        .HasForeignKey("FocusOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.StatSelection", "PrimaryStat")
                        .WithMany()
                        .HasForeignKey("PrimaryStatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.StatSelection", "SecondaryStat")
                        .WithMany()
                        .HasForeignKey("SecondaryStatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.Subclass", "Subclass")
                        .WithMany()
                        .HasForeignKey("SubclassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBuildCraft.Models.ExoticWeapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Class");

                    b.Navigation("FocusOption");

                    b.Navigation("PrimaryStat");

                    b.Navigation("SecondaryStat");

                    b.Navigation("Subclass");

                    b.Navigation("Weapon");
                });
#pragma warning restore 612, 618
        }
    }
}
